# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: RPM build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    container:
      image: centos:8
    steps:
      - uses: actions/checkout@v3
      - name: Install Dependencies
        run: |
          cd /etc/yum.repos.d/
          sed -i 's/mirrorlist/#mirrorlist/g' /etc/yum.repos.d/CentOS-*
          sed -i 's|#baseurl=http://mirror.centos.org|baseurl=http://vault.centos.org|g' /etc/yum.repos.d/CentOS-*
          yum update -y
          yum install -y createrepo rpm-build rpm-sign wget gcc python3 yum-utils tree
#
      - name: Add spec
        run: |
          mkdir -p ~/rpmbuild/{BUILD,RPMS,SOURCES,SPECS,SRPMS}
          mkdir -p ~/example/hello-world-program
          echo '#include <stdio.h>
          int main() {
            printf("Hello World!\\n");
            return 0;
          }' | gcc -o ~/example/hello-world-program/hello-world -x c -
          mkdir -p ~/example/rpm-work-dir
          mv hello.spec ~/example/rpm-work-dir
          cd ~
          cd ..
          pwd
          tree
          cd ..
          pwd
          tree
#          # ls -1 ~/example/rpm-work-dir
#          rpmbuild --target "x86_64" -bb ./example/rpm-work-dir/hello-world.spec
#
#      - name: Build
#        run: |
#          ls
#          pwd
#          cd ..
#          rpmbuild --target "x86_64" -bb hello-world.spec